// node_modules/get-stream/source/index.d.ts
var MaxBufferError = class extends Error {
  name;
};
export {
  MaxBufferError
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibm9kZV9tb2R1bGVzL2dldC1zdHJlYW0vc291cmNlL2luZGV4LmQudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiRTpcXFxccWRcXFxcdnVlMy1hZG1pblxcXFxub2RlX21vZHVsZXNcXFxcZ2V0LXN0cmVhbVxcXFxzb3VyY2VcXFxcaW5kZXguZC50c1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCJFOlxcXFxxZFxcXFx2dWUzLWFkbWluXFxcXG5vZGVfbW9kdWxlc1xcXFxnZXQtc3RyZWFtXFxcXHNvdXJjZVwiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vRTovcWQvdnVlMy1hZG1pbi9ub2RlX21vZHVsZXMvZ2V0LXN0cmVhbS9zb3VyY2UvaW5kZXguZC50c1wiO2ltcG9ydCB7dHlwZSBSZWFkYWJsZX0gZnJvbSAnbm9kZTpzdHJlYW0nO1xuaW1wb3J0IHt0eXBlIEJ1ZmZlcn0gZnJvbSAnbm9kZTpidWZmZXInO1xuXG5leHBvcnQgY2xhc3MgTWF4QnVmZmVyRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG5cdHJlYWRvbmx5IG5hbWU6ICdNYXhCdWZmZXJFcnJvcic7XG5cdGNvbnN0cnVjdG9yKCk7XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXR5cGVzXG50eXBlIFRleHRTdHJlYW1JdGVtID0gc3RyaW5nIHwgQnVmZmVyIHwgQXJyYXlCdWZmZXIgfCBBcnJheUJ1ZmZlclZpZXc7XG5leHBvcnQgdHlwZSBBbnlTdHJlYW08U3RlYW1JdGVtID0gVGV4dFN0cmVhbUl0ZW0+ID0gUmVhZGFibGUgfCBSZWFkYWJsZVN0cmVhbTxTdGVhbUl0ZW0+IHwgQXN5bmNJdGVyYWJsZTxTdGVhbUl0ZW0+O1xuXG5leHBvcnQgdHlwZSBPcHRpb25zID0ge1xuXHQvKipcblx0TWF4aW11bSBsZW5ndGggb2YgdGhlIHN0cmVhbS4gSWYgZXhjZWVkZWQsIHRoZSBwcm9taXNlIHdpbGwgYmUgcmVqZWN0ZWQgd2l0aCBhIGBNYXhCdWZmZXJFcnJvcmAuXG5cblx0RGVwZW5kaW5nIG9uIHRoZSBbbWV0aG9kXSgjYXBpKSwgdGhlIGxlbmd0aCBpcyBtZWFzdXJlZCB3aXRoIFtgc3RyaW5nLmxlbmd0aGBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1N0cmluZy9sZW5ndGgpLCBbYGJ1ZmZlci5sZW5ndGhgXShodHRwczovL25vZGVqcy5vcmcvYXBpL2J1ZmZlci5odG1sI2J1Zmxlbmd0aCksIFtgYXJyYXlCdWZmZXIuYnl0ZUxlbmd0aGBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0FycmF5QnVmZmVyL2J5dGVMZW5ndGgpIG9yIFtgYXJyYXkubGVuZ3RoYF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvQXJyYXkvbGVuZ3RoKS5cblxuXHRAZGVmYXVsdCBJbmZpbml0eVxuXHQqL1xuXHRyZWFkb25seSBtYXhCdWZmZXI/OiBudW1iZXI7XG59O1xuXG4vKipcbkdldCB0aGUgZ2l2ZW4gYHN0cmVhbWAgYXMgYSBzdHJpbmcuXG5cbkByZXR1cm5zIFRoZSBzdHJlYW0ncyBjb250ZW50cyBhcyBhIHByb21pc2UuXG5cbkBleGFtcGxlXG5gYGBcbmltcG9ydCBmcyBmcm9tICdub2RlOmZzJztcbmltcG9ydCBnZXRTdHJlYW0gZnJvbSAnZ2V0LXN0cmVhbSc7XG5cbmNvbnN0IHN0cmVhbSA9IGZzLmNyZWF0ZVJlYWRTdHJlYW0oJ3VuaWNvcm4udHh0Jyk7XG5cbmNvbnNvbGUubG9nKGF3YWl0IGdldFN0cmVhbShzdHJlYW0pKTtcbi8vICAgICAgICAgICAgICAgLCwpKSkpKSkpKTssXG4vLyAgICAgICAgICAgIF9fKSkpKSkpKSkpKSkpKSksXG4vLyBcXHwvICAgICAgIC1cXCgoKCgoJycnJygoKCgoKCgoLlxuLy8gLSotPT0vLy8vLy8oKCcnICAuICAgICBgKSkpKSkpLFxuLy8gL3xcXCAgICAgICkpfCBvICAgIDstLiAgICAnKCgoKCggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLCgsXG4vLyAgICAgICAgICAoIGB8ICAgIC8gICkgICAgOykpKSknICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICxfKSleOyh+XG4vLyAgICAgICAgICAgICB8ICAgfCAgIHwgICAsKSkoKCgoXyAgICAgX19fX18tLS0tLS1+fn4tLiAgICAgICAgJSw7KDsoPic7J35cbi8vICAgICAgICAgICAgIG9fKTsgICA7ICAgICkpKSgoKGAgfi0tLX4gIGA6OiAgICAgICAgICAgXFwgICAgICAlJX5+KSh2OyhgKCd+XG4vLyAgICAgICAgICAgICAgICAgICA7ICAgICcnJydgYGBgICAgICAgICAgYDogICAgICAgYDo6OnxcXCxfXywlJSAgICApO2AnOyB+XG4vLyAgICAgICAgICAgICAgICAgIHwgICBfICAgICAgICAgICAgICAgICkgICAgIC8gICAgICBgOnxgLS0tLScgICAgIGAtJ1xuLy8gICAgICAgICAgICBfX19fX18vXFwvfiAgICB8ICAgICAgICAgICAgICAgICAvICAgICAgICAvXG4vLyAgICAgICAgICAvfjs7Ll9fX18vOzsnICAvICAgICAgICAgIF9fXy0tLC0oICAgYDs7Oy9cbi8vICAgICAgICAgLyAvLyAgXztfX19fX187Jy0tLS0tLX5+fn5+ICAgIC87Oy9cXCAgICAvXG4vLyAgICAgICAgLy8gIHwgfCAgICAgICAgICAgICAgICAgICAgICAgIC8gOyAgIFxcOzssXFxcbi8vICAgICAgICg8XyAgfCA7ICAgICAgICAgICAgICAgICAgICAgIC8nLC8tLS0tLScgIF8+XG4vLyAgICAgICAgXFxffCB8fF8gICAgICAgICAgICAgICAgICAgICAvL347fn5+fn5+fn5+XG4vLyAgICAgICAgICAgIGBcXF98ICAgICAgICAgICAgICAgICAgICgsfn5cbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx+XFxcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH5+XG5gYGBcblxuQGV4YW1wbGVcbmBgYFxuaW1wb3J0IGdldFN0cmVhbSBmcm9tICdnZXQtc3RyZWFtJztcblxuY29uc3Qge2JvZHk6IHJlYWRhYmxlU3RyZWFtfSA9IGF3YWl0IGZldGNoKCdodHRwczovL2V4YW1wbGUuY29tJyk7XG5jb25zb2xlLmxvZyhhd2FpdCBnZXRTdHJlYW0ocmVhZGFibGVTdHJlYW0pKTtcbmBgYFxuXG5AZXhhbXBsZVxuYGBgXG5pbXBvcnQge29wZW5kaXJ9IGZyb20gJ25vZGU6ZnMvcHJvbWlzZXMnO1xuaW1wb3J0IHtnZXRTdHJlYW1Bc0FycmF5fSBmcm9tICdnZXQtc3RyZWFtJztcblxuY29uc3QgYXN5bmNJdGVyYWJsZSA9IGF3YWl0IG9wZW5kaXIoZGlyZWN0b3J5KTtcbmNvbnNvbGUubG9nKGF3YWl0IGdldFN0cmVhbUFzQXJyYXkoYXN5bmNJdGVyYWJsZSkpO1xuYGBgXG4qL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0U3RyZWFtKHN0cmVhbTogQW55U3RyZWFtLCBvcHRpb25zPzogT3B0aW9ucyk6IFByb21pc2U8c3RyaW5nPjtcblxuLyoqXG5HZXQgdGhlIGdpdmVuIGBzdHJlYW1gIGFzIGEgTm9kZS5qcyBbYEJ1ZmZlcmBdKGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvYnVmZmVyLmh0bWwjY2xhc3MtYnVmZmVyKS5cblxuQHJldHVybnMgVGhlIHN0cmVhbSdzIGNvbnRlbnRzIGFzIGEgcHJvbWlzZS5cblxuQGV4YW1wbGVcbmBgYFxuaW1wb3J0IHtnZXRTdHJlYW1Bc0J1ZmZlcn0gZnJvbSAnZ2V0LXN0cmVhbSc7XG5cbmNvbnN0IHN0cmVhbSA9IGZzLmNyZWF0ZVJlYWRTdHJlYW0oJ3VuaWNvcm4ucG5nJyk7XG5jb25zb2xlLmxvZyhhd2FpdCBnZXRTdHJlYW1Bc0J1ZmZlcihzdHJlYW0pKTtcbmBgYFxuKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXR5cGVzXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3RyZWFtQXNCdWZmZXIoc3RyZWFtOiBBbnlTdHJlYW0sIG9wdGlvbnM/OiBPcHRpb25zKTogUHJvbWlzZTxCdWZmZXI+O1xuXG4vKipcbkdldCB0aGUgZ2l2ZW4gYHN0cmVhbWAgYXMgYW4gW2BBcnJheUJ1ZmZlcmBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0FycmF5QnVmZmVyKS5cblxuQHJldHVybnMgVGhlIHN0cmVhbSdzIGNvbnRlbnRzIGFzIGEgcHJvbWlzZS5cblxuQGV4YW1wbGVcbmBgYFxuaW1wb3J0IHtnZXRTdHJlYW1Bc0FycmF5QnVmZmVyfSBmcm9tICdnZXQtc3RyZWFtJztcblxuY29uc3Qge2JvZHk6IHJlYWRhYmxlU3RyZWFtfSA9IGF3YWl0IGZldGNoKCdodHRwczovL2V4YW1wbGUuY29tJyk7XG5jb25zb2xlLmxvZyhhd2FpdCBnZXRTdHJlYW1Bc0FycmF5QnVmZmVyKHJlYWRhYmxlU3RyZWFtKSk7XG5gYGBcbiovXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3RyZWFtQXNBcnJheUJ1ZmZlcihzdHJlYW06IEFueVN0cmVhbSwgb3B0aW9ucz86IE9wdGlvbnMpOiBQcm9taXNlPEFycmF5QnVmZmVyPjtcblxuLyoqXG5HZXQgdGhlIGdpdmVuIGBzdHJlYW1gIGFzIGFuIGFycmF5LiBVbmxpa2UgW290aGVyIG1ldGhvZHNdKCNhcGkpLCB0aGlzIHN1cHBvcnRzIFtzdHJlYW1zIG9mIG9iamVjdHNdKGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvc3RyZWFtLmh0bWwjb2JqZWN0LW1vZGUpLlxuXG5AcmV0dXJucyBUaGUgc3RyZWFtJ3MgY29udGVudHMgYXMgYSBwcm9taXNlLlxuXG5AZXhhbXBsZVxuYGBgXG5pbXBvcnQge2dldFN0cmVhbUFzQXJyYXl9IGZyb20gJ2dldC1zdHJlYW0nO1xuXG5jb25zdCB7Ym9keTogcmVhZGFibGVTdHJlYW19ID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vZXhhbXBsZS5jb20nKTtcbmNvbnNvbGUubG9nKGF3YWl0IGdldFN0cmVhbUFzQXJyYXkocmVhZGFibGVTdHJlYW0pKTtcbmBgYFxuKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdHJlYW1Bc0FycmF5PEl0ZW0+KHN0cmVhbTogQW55U3RyZWFtPEl0ZW0+LCBvcHRpb25zPzogT3B0aW9ucyk6IFByb21pc2U8SXRlbVtdPjtcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFHTyxJQUFNLGlCQUFOLGNBQTZCLE1BQU07QUFBQSxFQUNoQztBQUVWOyIsCiAgIm5hbWVzIjogW10KfQo=
