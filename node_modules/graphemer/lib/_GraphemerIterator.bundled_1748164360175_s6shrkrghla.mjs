var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// node_modules/graphemer/lib/GraphemerIterator.js
var require_GraphemerIterator = __commonJS({
  "node_modules/graphemer/lib/GraphemerIterator.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var GraphemerIterator = class {
      constructor(str, nextBreak) {
        this._index = 0;
        this._str = str;
        this._nextBreak = nextBreak;
      }
      [Symbol.iterator]() {
        return this;
      }
      next() {
        let brk;
        if ((brk = this._nextBreak(this._str, this._index)) < this._str.length) {
          const value = this._str.slice(this._index, brk);
          this._index = brk;
          return { value, done: false };
        }
        if (this._index < this._str.length) {
          const value = this._str.slice(this._index);
          this._index = this._str.length;
          return { value, done: false };
        }
        return { value: void 0, done: true };
      }
    };
    exports.default = GraphemerIterator;
  }
});
export default require_GraphemerIterator();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibm9kZV9tb2R1bGVzL2dyYXBoZW1lci9saWIvR3JhcGhlbWVySXRlcmF0b3IuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiRTpcXFxccWRcXFxcdnVlMy1hZG1pblxcXFxub2RlX21vZHVsZXNcXFxcZ3JhcGhlbWVyXFxcXGxpYlxcXFxHcmFwaGVtZXJJdGVyYXRvci5qc1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCJFOlxcXFxxZFxcXFx2dWUzLWFkbWluXFxcXG5vZGVfbW9kdWxlc1xcXFxncmFwaGVtZXJcXFxcbGliXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9FOi9xZC92dWUzLWFkbWluL25vZGVfbW9kdWxlcy9ncmFwaGVtZXIvbGliL0dyYXBoZW1lckl0ZXJhdG9yLmpzXCI7XCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIEdyYXBoZW1lckl0ZXJhdG9yXG4gKlxuICogVGFrZXMgYSBzdHJpbmcgYW5kIGEgXCJCcmVha0hhbmRsZXJcIiBtZXRob2QgZHVyaW5nIGluaXRpYWxpc2F0aW9uXG4gKiBhbmQgY3JlYXRlcyBhbiBpdGVyYWJsZSBvYmplY3QgdGhhdCByZXR1cm5zIGluZGl2aWR1YWwgZ3JhcGhlbWVzLlxuICpcbiAqIEBwYXJhbSBzdHIge3N0cmluZ31cbiAqIEByZXR1cm4gR3JhcGhlbWVySXRlcmF0b3JcbiAqL1xuY2xhc3MgR3JhcGhlbWVySXRlcmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKHN0ciwgbmV4dEJyZWFrKSB7XG4gICAgICAgIHRoaXMuX2luZGV4ID0gMDtcbiAgICAgICAgdGhpcy5fc3RyID0gc3RyO1xuICAgICAgICB0aGlzLl9uZXh0QnJlYWsgPSBuZXh0QnJlYWs7XG4gICAgfVxuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgbmV4dCgpIHtcbiAgICAgICAgbGV0IGJyaztcbiAgICAgICAgaWYgKChicmsgPSB0aGlzLl9uZXh0QnJlYWsodGhpcy5fc3RyLCB0aGlzLl9pbmRleCkpIDwgdGhpcy5fc3RyLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLl9zdHIuc2xpY2UodGhpcy5faW5kZXgsIGJyayk7XG4gICAgICAgICAgICB0aGlzLl9pbmRleCA9IGJyaztcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiB2YWx1ZSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5faW5kZXggPCB0aGlzLl9zdHIubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuX3N0ci5zbGljZSh0aGlzLl9pbmRleCk7XG4gICAgICAgICAgICB0aGlzLl9pbmRleCA9IHRoaXMuX3N0ci5sZW5ndGg7XG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogdmFsdWUsIGRvbmU6IGZhbHNlIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEdyYXBoZW1lckl0ZXJhdG9yO1xuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7O0FBQUE7QUFBQTtBQUNBLFdBQU8sZUFBZSxTQUFTLGNBQWMsRUFBRSxPQUFPLEtBQUssQ0FBQztBQVU1RCxRQUFNLG9CQUFOLE1BQXdCO0FBQUEsTUFDcEIsWUFBWSxLQUFLLFdBQVc7QUFDeEIsYUFBSyxTQUFTO0FBQ2QsYUFBSyxPQUFPO0FBQ1osYUFBSyxhQUFhO0FBQUEsTUFDdEI7QUFBQSxNQUNBLENBQUMsT0FBTyxRQUFRLElBQUk7QUFDaEIsZUFBTztBQUFBLE1BQ1g7QUFBQSxNQUNBLE9BQU87QUFDSCxZQUFJO0FBQ0osYUFBSyxNQUFNLEtBQUssV0FBVyxLQUFLLE1BQU0sS0FBSyxNQUFNLEtBQUssS0FBSyxLQUFLLFFBQVE7QUFDcEUsZ0JBQU0sUUFBUSxLQUFLLEtBQUssTUFBTSxLQUFLLFFBQVEsR0FBRztBQUM5QyxlQUFLLFNBQVM7QUFDZCxpQkFBTyxFQUFFLE9BQWMsTUFBTSxNQUFNO0FBQUEsUUFDdkM7QUFDQSxZQUFJLEtBQUssU0FBUyxLQUFLLEtBQUssUUFBUTtBQUNoQyxnQkFBTSxRQUFRLEtBQUssS0FBSyxNQUFNLEtBQUssTUFBTTtBQUN6QyxlQUFLLFNBQVMsS0FBSyxLQUFLO0FBQ3hCLGlCQUFPLEVBQUUsT0FBYyxNQUFNLE1BQU07QUFBQSxRQUN2QztBQUNBLGVBQU8sRUFBRSxPQUFPLFFBQVcsTUFBTSxLQUFLO0FBQUEsTUFDMUM7QUFBQSxJQUNKO0FBQ0EsWUFBUSxVQUFVO0FBQUE7QUFBQTsiLAogICJuYW1lcyI6IFtdCn0K
