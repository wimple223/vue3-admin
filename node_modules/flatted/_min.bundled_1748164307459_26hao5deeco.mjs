// node_modules/flatted/min.js
self.Flatted = function(n) {
  "use strict";
  function t(n2) {
    return t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(n3) {
      return typeof n3;
    } : function(n3) {
      return n3 && "function" == typeof Symbol && n3.constructor === Symbol && n3 !== Symbol.prototype ? "symbol" : typeof n3;
    }, t(n2);
  }
  var r = JSON.parse, e = JSON.stringify, o = Object.keys, u = String, f = "string", i = {}, c = "object", a = function(n2, t2) {
    return t2;
  }, l = function(n2) {
    return n2 instanceof u ? u(n2) : n2;
  }, s = function(n2, r2) {
    return t(r2) === f ? new u(r2) : r2;
  }, y = function(n2, r2, e2, f2) {
    for (var a2 = [], l2 = o(e2), s2 = l2.length, p2 = 0; p2 < s2; p2++) {
      var v2 = l2[p2], S2 = e2[v2];
      if (S2 instanceof u) {
        var b = n2[S2];
        t(b) !== c || r2.has(b) ? e2[v2] = f2.call(e2, v2, b) : (r2.add(b), e2[v2] = i, a2.push({ k: v2, a: [n2, r2, b, f2] }));
      } else e2[v2] !== i && (e2[v2] = f2.call(e2, v2, S2));
    }
    for (var m = a2.length, g = 0; g < m; g++) {
      var h = a2[g], O = h.k, d = h.a;
      e2[O] = f2.call(e2, O, y.apply(null, d));
    }
    return e2;
  }, p = function(n2, t2, r2) {
    var e2 = u(t2.push(r2) - 1);
    return n2.set(r2, e2), e2;
  }, v = function(n2, e2) {
    var o2 = r(n2, s).map(l), u2 = o2[0], f2 = e2 || a, i2 = t(u2) === c && u2 ? y(o2, /* @__PURE__ */ new Set(), u2, f2) : u2;
    return f2.call({ "": i2 }, "", i2);
  }, S = function(n2, r2, o2) {
    for (var u2 = r2 && t(r2) === c ? function(n3, t2) {
      return "" === n3 || -1 < r2.indexOf(n3) ? t2 : void 0;
    } : r2 || a, i2 = /* @__PURE__ */ new Map(), l2 = [], s2 = [], y2 = +p(i2, l2, u2.call({ "": n2 }, "", n2)), v2 = !y2; y2 < l2.length; ) v2 = true, s2[y2] = e(l2[y2++], S2, o2);
    return "[" + s2.join(",") + "]";
    function S2(n3, r3) {
      if (v2) return v2 = !v2, r3;
      var e2 = u2.call(this, n3, r3);
      switch (t(e2)) {
        case c:
          if (null === e2) return e2;
        case f:
          return i2.get(e2) || p(i2, l2, e2);
      }
      return e2;
    }
  };
  return n.fromJSON = function(n2) {
    return v(e(n2));
  }, n.parse = v, n.stringify = S, n.toJSON = function(n2) {
    return r(S(n2));
  }, n;
}({});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibm9kZV9tb2R1bGVzL2ZsYXR0ZWQvbWluLmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkU6XFxcXHFkXFxcXHZ1ZTMtYWRtaW5cXFxcbm9kZV9tb2R1bGVzXFxcXGZsYXR0ZWRcXFxcbWluLmpzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIkU6XFxcXHFkXFxcXHZ1ZTMtYWRtaW5cXFxcbm9kZV9tb2R1bGVzXFxcXGZsYXR0ZWRcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL0U6L3FkL3Z1ZTMtYWRtaW4vbm9kZV9tb2R1bGVzL2ZsYXR0ZWQvbWluLmpzXCI7c2VsZi5GbGF0dGVkPWZ1bmN0aW9uKG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHQobil7cmV0dXJuIHQ9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKG4pe3JldHVybiB0eXBlb2Ygbn06ZnVuY3Rpb24obil7cmV0dXJuIG4mJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmbi5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmbiE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2Ygbn0sdChuKX12YXIgcj1KU09OLnBhcnNlLGU9SlNPTi5zdHJpbmdpZnksbz1PYmplY3Qua2V5cyx1PVN0cmluZyxmPVwic3RyaW5nXCIsaT17fSxjPVwib2JqZWN0XCIsYT1mdW5jdGlvbihuLHQpe3JldHVybiB0fSxsPWZ1bmN0aW9uKG4pe3JldHVybiBuIGluc3RhbmNlb2YgdT91KG4pOm59LHM9ZnVuY3Rpb24obixyKXtyZXR1cm4gdChyKT09PWY/bmV3IHUocik6cn0seT1mdW5jdGlvbihuLHIsZSxmKXtmb3IodmFyIGE9W10sbD1vKGUpLHM9bC5sZW5ndGgscD0wO3A8cztwKyspe3ZhciB2PWxbcF0sUz1lW3ZdO2lmKFMgaW5zdGFuY2VvZiB1KXt2YXIgYj1uW1NdO3QoYikhPT1jfHxyLmhhcyhiKT9lW3ZdPWYuY2FsbChlLHYsYik6KHIuYWRkKGIpLGVbdl09aSxhLnB1c2goe2s6dixhOltuLHIsYixmXX0pKX1lbHNlIGVbdl0hPT1pJiYoZVt2XT1mLmNhbGwoZSx2LFMpKX1mb3IodmFyIG09YS5sZW5ndGgsZz0wO2c8bTtnKyspe3ZhciBoPWFbZ10sTz1oLmssZD1oLmE7ZVtPXT1mLmNhbGwoZSxPLHkuYXBwbHkobnVsbCxkKSl9cmV0dXJuIGV9LHA9ZnVuY3Rpb24obix0LHIpe3ZhciBlPXUodC5wdXNoKHIpLTEpO3JldHVybiBuLnNldChyLGUpLGV9LHY9ZnVuY3Rpb24obixlKXt2YXIgbz1yKG4scykubWFwKGwpLHU9b1swXSxmPWV8fGEsaT10KHUpPT09YyYmdT95KG8sbmV3IFNldCx1LGYpOnU7cmV0dXJuIGYuY2FsbCh7XCJcIjppfSxcIlwiLGkpfSxTPWZ1bmN0aW9uKG4scixvKXtmb3IodmFyIHU9ciYmdChyKT09PWM/ZnVuY3Rpb24obix0KXtyZXR1cm5cIlwiPT09bnx8LTE8ci5pbmRleE9mKG4pP3Q6dm9pZCAwfTpyfHxhLGk9bmV3IE1hcCxsPVtdLHM9W10seT0rcChpLGwsdS5jYWxsKHtcIlwiOm59LFwiXCIsbikpLHY9IXk7eTxsLmxlbmd0aDspdj0hMCxzW3ldPWUobFt5KytdLFMsbyk7cmV0dXJuXCJbXCIrcy5qb2luKFwiLFwiKStcIl1cIjtmdW5jdGlvbiBTKG4scil7aWYodilyZXR1cm4gdj0hdixyO3ZhciBlPXUuY2FsbCh0aGlzLG4scik7c3dpdGNoKHQoZSkpe2Nhc2UgYzppZihudWxsPT09ZSlyZXR1cm4gZTtjYXNlIGY6cmV0dXJuIGkuZ2V0KGUpfHxwKGksbCxlKX1yZXR1cm4gZX19O3JldHVybiBuLmZyb21KU09OPWZ1bmN0aW9uKG4pe3JldHVybiB2KGUobikpfSxuLnBhcnNlPXYsbi5zdHJpbmdpZnk9UyxuLnRvSlNPTj1mdW5jdGlvbihu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
