var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// node_modules/@types/minimist/index.d.ts
var require_index_d = __commonJS({
  "node_modules/@types/minimist/index.d.ts"(exports, module) {
    module.exports = minimist;
  }
});
export default require_index_d();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibm9kZV9tb2R1bGVzL0B0eXBlcy9taW5pbWlzdC9pbmRleC5kLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkU6XFxcXHFkXFxcXHZ1ZTMtYWRtaW5cXFxcbm9kZV9tb2R1bGVzXFxcXEB0eXBlc1xcXFxtaW5pbWlzdFxcXFxpbmRleC5kLnRzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIkU6XFxcXHFkXFxcXHZ1ZTMtYWRtaW5cXFxcbm9kZV9tb2R1bGVzXFxcXEB0eXBlc1xcXFxtaW5pbWlzdFwiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vRTovcWQvdnVlMy1hZG1pbi9ub2RlX21vZHVsZXMvQHR5cGVzL21pbmltaXN0L2luZGV4LmQudHNcIjsvKipcbiAqIFJldHVybiBhbiBhcmd1bWVudCBvYmplY3QgcG9wdWxhdGVkIHdpdGggdGhlIGFycmF5IGFyZ3VtZW50cyBmcm9tIGFyZ3NcbiAqXG4gKiBAcGFyYW0gW2FyZ3NdIEFuIG9wdGlvbmFsIGFyZ3VtZW50IGFycmF5ICh0eXBpY2FsbHkgYHByb2Nlc3MuYXJndi5zbGljZSgyKWApXG4gKiBAcGFyYW0gW29wdHNdIEFuIG9wdGlvbmFsIG9wdGlvbnMgb2JqZWN0IHRvIGN1c3RvbWl6ZSB0aGUgcGFyc2luZ1xuICovXG5kZWNsYXJlIGZ1bmN0aW9uIG1pbmltaXN0KGFyZ3M/OiBzdHJpbmdbXSwgb3B0cz86IG1pbmltaXN0Lk9wdHMpOiBtaW5pbWlzdC5QYXJzZWRBcmdzO1xuXG4vKipcbiAqIFJldHVybiBhbiBhcmd1bWVudCBvYmplY3QgcG9wdWxhdGVkIHdpdGggdGhlIGFycmF5IGFyZ3VtZW50cyBmcm9tIGFyZ3MuIFN0cm9uZ2x5LXR5cGVkXG4gKiB0byBiZSB0aGUgaW50ZXJzZWN0IG9mIHR5cGUgVCB3aXRoIG1pbmltaXN0LlBhcnNlZEFyZ3MuXG4gKlxuICogYFRgIFRoZSB0eXBlIHRoYXQgd2lsbCBiZSBpbnRlcnNlY3RlZCB3aXRoIG1pbmltaXN0LlBhcnNlZEFyZ3MgdG8gcmVwcmVzZW50IHRoZSBhcmd1bWVudCBvYmplY3RcbiAqXG4gKiBAcGFyYW0gW2FyZ3NdIEFuIG9wdGlvbmFsIGFyZ3VtZW50IGFycmF5ICh0eXBpY2FsbHkgYHByb2Nlc3MuYXJndi5zbGljZSgyKWApXG4gKiBAcGFyYW0gW29wdHNdIEFuIG9wdGlvbmFsIG9wdGlvbnMgb2JqZWN0IHRvIGN1c3RvbWl6ZSB0aGUgcGFyc2luZ1xuICovXG5kZWNsYXJlIGZ1bmN0aW9uIG1pbmltaXN0PFQ+KGFyZ3M/OiBzdHJpbmdbXSwgb3B0cz86IG1pbmltaXN0Lk9wdHMpOiBUICYgbWluaW1pc3QuUGFyc2VkQXJncztcblxuLyoqXG4gKiBSZXR1cm4gYW4gYXJndW1lbnQgb2JqZWN0IHBvcHVsYXRlZCB3aXRoIHRoZSBhcnJheSBhcmd1bWVudHMgZnJvbSBhcmdzLiBTdHJvbmdseS10eXBlZFxuICogdG8gYmUgdGhlIHRoZSB0eXBlIFQgd2hpY2ggc2hvdWxkIGV4dGVuZCBtaW5pbWlzdC5QYXJzZWRBcmdzXG4gKlxuICogYFRgIFRoZSB0eXBlIHRoYXQgZXh0ZW5kcyBtaW5pbWlzdC5QYXJzZWRBcmdzIGFuZCByZXByZXNlbnRzIHRoZSBhcmd1bWVudCBvYmplY3RcbiAqXG4gKiBAcGFyYW0gW2FyZ3NdIEFuIG9wdGlvbmFsIGFyZ3VtZW50IGFycmF5ICh0eXBpY2FsbHkgYHByb2Nlc3MuYXJndi5zbGljZSgyKWApXG4gKiBAcGFyYW0gW29wdHNdIEFuIG9wdGlvbmFsIG9wdGlvbnMgb2JqZWN0IHRvIGN1c3RvbWl6ZSB0aGUgcGFyc2luZ1xuICovXG5kZWNsYXJlIGZ1bmN0aW9uIG1pbmltaXN0PFQgZXh0ZW5kcyBtaW5pbWlzdC5QYXJzZWRBcmdzPihhcmdzPzogc3RyaW5nW10sIG9wdHM/OiBtaW5pbWlzdC5PcHRzKTogVDtcblxuZGVjbGFyZSBuYW1lc3BhY2UgbWluaW1pc3Qge1xuICAgIGludGVyZmFjZSBPcHRzIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEEgc3RyaW5nIG9yIGFycmF5IG9mIHN0cmluZ3MgYXJndW1lbnQgbmFtZXMgdG8gYWx3YXlzIHRyZWF0IGFzIHN0cmluZ3NcbiAgICAgICAgICovXG4gICAgICAgIHN0cmluZz86IHN0cmluZyB8IHN0cmluZ1tdIHwgdW5kZWZpbmVkO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBIGJvb2xlYW4sIHN0cmluZyBvciBhcnJheSBvZiBzdHJpbmdzIHRvIGFsd2F5cyB0cmVhdCBhcyBib29sZWFucy4gSWYgdHJ1ZSB3aWxsIHRyZWF0XG4gICAgICAgICAqIGFsbCBkb3VibGUgaHlwaGVuYXRlZCBhcmd1bWVudHMgd2l0aG91dCBlcXVhbHMgc2lnbnMgYXMgYm9vbGVhbiAoZS5nLiBhZmZlY3RzIGAtLWZvb2AsIG5vdCBgLWZgIG9yIGAtLWZvbz1iYXJgKVxuICAgICAgICAgKi9cbiAgICAgICAgYm9vbGVhbj86IGJvb2xlYW4gfCBzdHJpbmcgfCBzdHJpbmdbXSB8IHVuZGVmaW5lZDtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQW4gb2JqZWN0IG1hcHBpbmcgc3RyaW5nIG5hbWVzIHRvIHN0cmluZ3Mgb3IgYXJyYXlzIG9mIHN0cmluZyBhcmd1bWVudCBuYW1lcyB0byB1c2UgYXMgYWxpYXNlc1xuICAgICAgICAgKi9cbiAgICAgICAgYWxpYXM/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB8IHN0cmluZ1tdIH0gfCB1bmRlZmluZWQ7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFuIG9iamVjdCBtYXBwaW5nIHN0cmluZyBhcmd1bWVudCBuYW1lcyB0byBkZWZhdWx0IHZhbHVlc1xuICAgICAgICAgKi9cbiAgICAgICAgZGVmYXVsdD86IHsgW2tleTogc3RyaW5nXTogYW55IH0gfCB1bmRlZmluZWQ7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFdoZW4gdHJ1ZSwgcG9wdWxhdGUgYXJndi5fIHdpdGggZXZlcnl0aGluZyBhZnRlciB0aGUgZmlyc3Qgbm9uLW9wdGlvblxuICAgICAgICAgKi9cbiAgICAgICAgc3RvcEVhcmx5PzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQSBmdW5jdGlvbiB3aGljaCBpcyBpbnZva2VkIHdpdGggYSBjb21tYW5kIGxpbmUgcGFyYW1ldGVyIG5vdCBkZWZpbmVkIGluIHRoZSBvcHRzXG4gICAgICAgICAqIGNvbmZpZ3VyYXRpb24gb2JqZWN0LiBJZiB0aGUgZnVuY3Rpb24gcmV0dXJucyBmYWxzZSwgdGhlIHVua25vd24gb3B0aW9uIGlzIG5vdCBhZGRlZCB0byBhcmd2XG4gICAgICAgICAqL1xuICAgICAgICB1bmtub3duPzogKChhcmc6IHN0cmluZykgPT4gYm9vbGVhbikgfCB1bmRlZmluZWQ7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFdoZW4gdHJ1ZSwgcG9wdWxhdGUgYXJndi5fIHdpdGggZXZlcnl0aGluZyBiZWZvcmUgdGhlIC0tIGFuZCBhcmd2WyctLSddIHdpdGggZXZlcnl0aGluZyBhZnRlciB0aGUgLS0uXG4gICAgICAgICAqIE5vdGUgdGhhdCB3aXRoIC0tIHNldCwgcGFyc2luZyBmb3IgYXJndW1lbnRzIHN0aWxsIHN0b3BzIGFmdGVyIHRoZSBgLS1gLlxuICAgICAgICAgKi9cbiAgICAgICAgXCItLVwiPzogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgUGFyc2VkQXJncyB7XG4gICAgICAgIFthcmc6IHN0cmluZ106IGFueTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogSWYgb3B0c1snLS0nXSBpcyB0cnVlLCBwb3B1bGF0ZWQgd2l0aCBldmVyeXRoaW5nIGFmdGVyIHRoZSAtLVxuICAgICAgICAgKi9cbiAgICAgICAgXCItLVwiPzogc3RyaW5nW10gfCB1bmRlZmluZWQ7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENvbnRhaW5zIGFsbCB0aGUgYXJndW1lbnRzIHRoYXQgZGlkbid0IGhhdmUgYW4gb3B0aW9uIGFzc29jaWF0ZWQgd2l0aCB0aGVtXG4gICAgICAgICAqL1xuICAgICAgICBfOiBzdHJpbmdbXTtcbiAgICB9XG59XG5cbmV4cG9ydCA9IG1pbmltaXN0O1xuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7O0FBQUE7QUFBQTtBQXNGQSxxQkFBUztBQUFBO0FBQUE7IiwKICAibmFtZXMiOiBbXQp9Cg==
