var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// node_modules/indent-string/index.js
var require_index = __commonJS({
  "node_modules/indent-string/index.js"(exports, module) {
    module.exports = (string, count = 1, options) => {
      options = {
        indent: " ",
        includeEmptyLines: false,
        ...options
      };
      if (typeof string !== "string") {
        throw new TypeError(
          `Expected \`input\` to be a \`string\`, got \`${typeof string}\``
        );
      }
      if (typeof count !== "number") {
        throw new TypeError(
          `Expected \`count\` to be a \`number\`, got \`${typeof count}\``
        );
      }
      if (typeof options.indent !== "string") {
        throw new TypeError(
          `Expected \`options.indent\` to be a \`string\`, got \`${typeof options.indent}\``
        );
      }
      if (count === 0) {
        return string;
      }
      const regex = options.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
      return string.replace(regex, options.indent.repeat(count));
    };
  }
});
export default require_index();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibm9kZV9tb2R1bGVzL2luZGVudC1zdHJpbmcvaW5kZXguanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiRTpcXFxccWRcXFxcdnVlMy1hZG1pblxcXFxub2RlX21vZHVsZXNcXFxcaW5kZW50LXN0cmluZ1xcXFxpbmRleC5qc1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCJFOlxcXFxxZFxcXFx2dWUzLWFkbWluXFxcXG5vZGVfbW9kdWxlc1xcXFxpbmRlbnQtc3RyaW5nXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9FOi9xZC92dWUzLWFkbWluL25vZGVfbW9kdWxlcy9pbmRlbnQtc3RyaW5nL2luZGV4LmpzXCI7J3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChzdHJpbmcsIGNvdW50ID0gMSwgb3B0aW9ucykgPT4ge1xuXHRvcHRpb25zID0ge1xuXHRcdGluZGVudDogJyAnLFxuXHRcdGluY2x1ZGVFbXB0eUxpbmVzOiBmYWxzZSxcblx0XHQuLi5vcHRpb25zXG5cdH07XG5cblx0aWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihcblx0XHRcdGBFeHBlY3RlZCBcXGBpbnB1dFxcYCB0byBiZSBhIFxcYHN0cmluZ1xcYCwgZ290IFxcYCR7dHlwZW9mIHN0cmluZ31cXGBgXG5cdFx0KTtcblx0fVxuXG5cdGlmICh0eXBlb2YgY291bnQgIT09ICdudW1iZXInKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihcblx0XHRcdGBFeHBlY3RlZCBcXGBjb3VudFxcYCB0byBiZSBhIFxcYG51bWJlclxcYCwgZ290IFxcYCR7dHlwZW9mIGNvdW50fVxcYGBcblx0XHQpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBvcHRpb25zLmluZGVudCAhPT0gJ3N0cmluZycpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKFxuXHRcdFx0YEV4cGVjdGVkIFxcYG9wdGlvbnMuaW5kZW50XFxgIHRvIGJlIGEgXFxgc3RyaW5nXFxgLCBnb3QgXFxgJHt0eXBlb2Ygb3B0aW9ucy5pbmRlbnR9XFxgYFxuXHRcdCk7XG5cdH1cblxuXHRpZiAoY291bnQgPT09IDApIHtcblx0XHRyZXR1cm4gc3RyaW5nO1xuXHR9XG5cblx0Y29uc3QgcmVnZXggPSBvcHRpb25zLmluY2x1ZGVFbXB0eUxpbmVzID8gL14vZ20gOiAvXig/IVxccyokKS9nbTtcblxuXHRyZXR1cm4gc3RyaW5nLnJlcGxhY2UocmVnZXgsIG9wdGlvbnMuaW5kZW50LnJlcGVhdChjb3VudCkpO1xufTtcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7OztBQUFBO0FBQUE7QUFFQSxXQUFPLFVBQVUsQ0FBQyxRQUFRLFFBQVEsR0FBRyxZQUFZO0FBQ2hELGdCQUFVO0FBQUEsUUFDVCxRQUFRO0FBQUEsUUFDUixtQkFBbUI7QUFBQSxRQUNuQixHQUFHO0FBQUEsTUFDSjtBQUVBLFVBQUksT0FBTyxXQUFXLFVBQVU7QUFDL0IsY0FBTSxJQUFJO0FBQUEsVUFDVCxnREFBZ0QsT0FBTyxNQUFNO0FBQUEsUUFDOUQ7QUFBQSxNQUNEO0FBRUEsVUFBSSxPQUFPLFVBQVUsVUFBVTtBQUM5QixjQUFNLElBQUk7QUFBQSxVQUNULGdEQUFnRCxPQUFPLEtBQUs7QUFBQSxRQUM3RDtBQUFBLE1BQ0Q7QUFFQSxVQUFJLE9BQU8sUUFBUSxXQUFXLFVBQVU7QUFDdkMsY0FBTSxJQUFJO0FBQUEsVUFDVCx5REFBeUQsT0FBTyxRQUFRLE1BQU07QUFBQSxRQUMvRTtBQUFBLE1BQ0Q7QUFFQSxVQUFJLFVBQVUsR0FBRztBQUNoQixlQUFPO0FBQUEsTUFDUjtBQUVBLFlBQU0sUUFBUSxRQUFRLG9CQUFvQixRQUFRO0FBRWxELGFBQU8sT0FBTyxRQUFRLE9BQU8sUUFBUSxPQUFPLE9BQU8sS0FBSyxDQUFDO0FBQUEsSUFDMUQ7QUFBQTtBQUFBOyIsCiAgIm5hbWVzIjogW10KfQo=
