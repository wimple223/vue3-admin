var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// node_modules/lodash/_getView.js
var require_getView = __commonJS({
  "node_modules/lodash/_getView.js"(exports, module) {
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function getView(start, end, transforms) {
      var index = -1, length = transforms.length;
      while (++index < length) {
        var data = transforms[index], size = data.size;
        switch (data.type) {
          case "drop":
            start += size;
            break;
          case "dropRight":
            end -= size;
            break;
          case "take":
            end = nativeMin(end, start + size);
            break;
          case "takeRight":
            start = nativeMax(start, end - size);
            break;
        }
      }
      return { "start": start, "end": end };
    }
    module.exports = getView;
  }
});
export default require_getView();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0Vmlldy5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiY29uc3QgX19pbmplY3RlZF9maWxlbmFtZV9fID0gXCJFOlxcXFxxZFxcXFx2dWUzLWFkbWluXFxcXG5vZGVfbW9kdWxlc1xcXFxsb2Rhc2hcXFxcX2dldFZpZXcuanNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiRTpcXFxccWRcXFxcdnVlMy1hZG1pblxcXFxub2RlX21vZHVsZXNcXFxcbG9kYXNoXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9FOi9xZC92dWUzLWFkbWluL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFZpZXcuanNcIjsvKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlTWF4ID0gTWF0aC5tYXgsXG4gICAgbmF0aXZlTWluID0gTWF0aC5taW47XG5cbi8qKlxuICogR2V0cyB0aGUgdmlldywgYXBwbHlpbmcgYW55IGB0cmFuc2Zvcm1zYCB0byB0aGUgYHN0YXJ0YCBhbmQgYGVuZGAgcG9zaXRpb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge251bWJlcn0gc3RhcnQgVGhlIHN0YXJ0IG9mIHRoZSB2aWV3LlxuICogQHBhcmFtIHtudW1iZXJ9IGVuZCBUaGUgZW5kIG9mIHRoZSB2aWV3LlxuICogQHBhcmFtIHtBcnJheX0gdHJhbnNmb3JtcyBUaGUgdHJhbnNmb3JtYXRpb25zIHRvIGFwcGx5IHRvIHRoZSB2aWV3LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBhbiBvYmplY3QgY29udGFpbmluZyB0aGUgYHN0YXJ0YCBhbmQgYGVuZGBcbiAqICBwb3NpdGlvbnMgb2YgdGhlIHZpZXcuXG4gKi9cbmZ1bmN0aW9uIGdldFZpZXcoc3RhcnQsIGVuZCwgdHJhbnNmb3Jtcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IHRyYW5zZm9ybXMubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGRhdGEgPSB0cmFuc2Zvcm1zW2luZGV4XSxcbiAgICAgICAgc2l6ZSA9IGRhdGEuc2l6ZTtcblxuICAgIHN3aXRjaCAoZGF0YS50eXBlKSB7XG4gICAgICBjYXNlICdkcm9wJzogICAgICBzdGFydCArPSBzaXplOyBicmVhaztcbiAgICAgIGNhc2UgJ2Ryb3BSaWdodCc6IGVuZCAtPSBzaXplOyBicmVhaztcbiAgICAgIGNhc2UgJ3Rha2UnOiAgICAgIGVuZCA9IG5hdGl2ZU1pbihlbmQsIHN0YXJ0ICsgc2l6ZSk7IGJyZWFrO1xuICAgICAgY2FzZSAndGFrZVJpZ2h0Jzogc3RhcnQgPSBuYXRpdmVNYXgoc3RhcnQsIGVuZCAtIHNpemUpOyBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHsgJ3N0YXJ0Jzogc3RhcnQsICdlbmQnOiBlbmQgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRWaWV3O1xuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7O0FBQUE7QUFBQTtBQUNBLFFBQUksWUFBWSxLQUFLO0FBQXJCLFFBQ0ksWUFBWSxLQUFLO0FBWXJCLGFBQVMsUUFBUSxPQUFPLEtBQUssWUFBWTtBQUN2QyxVQUFJLFFBQVEsSUFDUixTQUFTLFdBQVc7QUFFeEIsYUFBTyxFQUFFLFFBQVEsUUFBUTtBQUN2QixZQUFJLE9BQU8sV0FBVyxLQUFLLEdBQ3ZCLE9BQU8sS0FBSztBQUVoQixnQkFBUSxLQUFLLE1BQU07QUFBQSxVQUNqQixLQUFLO0FBQWEscUJBQVM7QUFBTTtBQUFBLFVBQ2pDLEtBQUs7QUFBYSxtQkFBTztBQUFNO0FBQUEsVUFDL0IsS0FBSztBQUFhLGtCQUFNLFVBQVUsS0FBSyxRQUFRLElBQUk7QUFBRztBQUFBLFVBQ3RELEtBQUs7QUFBYSxvQkFBUSxVQUFVLE9BQU8sTUFBTSxJQUFJO0FBQUc7QUFBQSxRQUMxRDtBQUFBLE1BQ0Y7QUFDQSxhQUFPLEVBQUUsU0FBUyxPQUFPLE9BQU8sSUFBSTtBQUFBLElBQ3RDO0FBRUEsV0FBTyxVQUFVO0FBQUE7QUFBQTsiLAogICJuYW1lcyI6IFtdCn0K
